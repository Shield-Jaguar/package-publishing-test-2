/**
 * PackagePublishing.WebLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import {
  PublishSdkPublishCommand,
  publishSdkPublishCommandSchema,
} from '../models/publishSdkPublishCommand';
import { optional, string } from '../schema';
import { BaseController } from './baseController';

export class PublishingController extends BaseController {
  /**
   * @param profileId
   * @param body
   * @return Response from the API call
   */
  async apiPublishByProfileIdPOST(
    profileId: string,
    body?: PublishSdkPublishCommand,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<void>> {
    const req = this.createRequest('POST');
    const mapped = req.prepareArgs({
      profileId: [profileId, string()],
      body: [body, optional(publishSdkPublishCommandSchema)],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    req.appendTemplatePath`/api/publish/${mapped.profileId}`;
    return req.call(requestOptions);
  }
}
